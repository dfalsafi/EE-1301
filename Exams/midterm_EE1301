#include <iostream>
#include <fstream>
#include <string>
using namespace std;


double power(double base, unsigned int exp)
{ // Creates a function that declares double type for "base" and an int named "exp" that can only be positive
    // double result = 0;
    if (exp == 0)
    {
        return 1;
    }
    else if (exp == 1) //When the exponent is 1 whatever the base is to the power of 1 results with returning a base
    {
        return base;
    }
    else
    {
        return base * power(base, exp - 1);
    }
}
void q2()
{ // create a void function to take in a integer type named "N" that can only be positive and use function "power"
    cout << "How many powers of 7 do you want? ";
    // unsigned int input = 0;
    int N;
    cin >> N;

    for (int i = 1; i <= N; i++)
    {
        cout << power(7, i) << endl;
    }
}

// Function to print powers of 12 less than k to a file
void q3(int k)
{
    ofstream outputFile("power12.txt");
    if (!outputFile)
    {
        std::cerr << "Error opening file for writing" << std::endl;
        return;
    }

    int powerValue = 12;
    int exponent = 1;
    while (powerValue < k)
    {
        outputFile << powerValue << endl;
        powerValue = power(12, ++exponent);
    }

    outputFile.close();
}

int main()
{
    //Question 1
    double y = 1;                //these are the practice runs for the power function to be executed correctly
    unsigned int x = 3;
    cout << power(y, x);

//Question 2
q2();
// Question 3 
    q3(10000);
     q2();

   //Question 4
    q2();
    int limit;
    cout << "Input upper limit:";
    cin >> limit;
    q3(limit);
 
    
    return 0;
}
